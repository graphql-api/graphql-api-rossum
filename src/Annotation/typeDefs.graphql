# import Node, RossumEntity from '../Node.graphql'
# import URL, JSON, EmailAddress, DateTime from '../Scalars.graphql'
# import RossumDocument from '../Document/typeDefs.graphql'
# import RossumPage from '../Page/typeDefs.graphql'

enum Rossum_CONTENT_CATEGORY {
  section
  datapoint
  multivalue
  tuple
}

type RossumContentSection implements Node & RossumEntity @key(fields: "id") {
  id: ID!
  url: URL!
  schema_id: ID
  category: Rossum_CONTENT_CATEGORY
  children: [RossumContent]
}

enum Rossum_CONTENT_VALUE_TYPE {
  number
  string
}

interface RossumContent {
  category: Rossum_CONTENT_CATEGORY
  schema_id: String
}

type RossumTuple implements RossumContent {
  category: Rossum_CONTENT_CATEGORY
  schema_id: String
}

type RossumMultivalue implements RossumContent {
  category: Rossum_CONTENT_CATEGORY
  schema_id: String
  children: JSON
}

type RossumDatapoint implements RossumContent {
  category: Rossum_CONTENT_CATEGORY
  schema_id: String
  rir_confidence: String
  value: String
  type: Rossum_CONTENT_VALUE_TYPE
}

type RossumAnnotationContent implements Node & RossumEntity @key(fields: "id") {
  id: ID!
  url: URL!
}

type RossumAnnotationSchema {
  id: ID!
}

enum RossumAnnotationStatus {
  """
  Document is being processed by the AI Engine for data extraction; initial state of the annotation.
  """
  importing
  """
  Import failed e.g. due to a malformed document file.
  """
  failed_import
  """
  Annotation was split in user interface and new annotations were created from it.
  """
  split
  """
  Initial extraction step is done and the annotation is waiting for user validation.
  """
  to_review
  """
  Annotation is undergoing validation in the user interface.
  """
  reviewing
  """
  Annotation is validated and confirmed by the user. This status must be explicitly enabled on the queue to be present.
  """
  confirmed
  """
  Annotation is validated and is now awaiting the completion of connector save call. See connector extension for more information on this status.
  """
  exporting
  """
  Annotation is validated and successfully passed all hooks; this is the typical terminal state of an annotation.
  """
  exported
  """
  When the connector returned an error.
  """
  failed_export
  """
  Operator has chosen to postpone the annotation instead of exporting it.
  """
  postponed
  """
  When the annotation was deleted by the user.
  """
  deleted
  """
  Only metadata was preserved after a deletion. Internal status, shall not be used in production.
  """
  purged
}

type RossumAnnotation implements Node & RossumEntity @key(fields: "id") {
  id: ID!
  url: URL!
  document: RossumDocument
  queue: String
  schema: RossumAnnotationSchema
  relations: [String]
  pages: [RossumPage]
  modifier: String
  modified_at: DateTime
  confirmed_at: DateTime
  exported_at: String
  assigned_at: String
  status: String
  rir_poll_id: String
  messages: [String]
  content: [RossumContentSection]
  time_spent: Int
}

type EmbeddedUrlResponse {
  url: URL
  status: RossumAnnotationStatus
}

type StartAnnotationResponse {
  annotation: RossumAnnotation
  session_timeout: String
}

type StartEmbeddedAnnotationResponse {
  url: URL
}

type CreateEmbeddedUrlForAnnotationResponse {
  url: URL
  status: RossumAnnotationStatus
}

type Query {
  startAnnotation: StartAnnotationResponse
  startEmbeddedAnnotation: StartEmbeddedAnnotationResponse
  createEmbeddedUrlForAnnotation: CreateEmbeddedUrlForAnnotationResponse
}
