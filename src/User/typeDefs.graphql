# import Node, RossumEntity from '../Node.graphql'
# import URL, JSON, EmailAddress, DateTime from '../Scalars.graphql'
# import RossumOrganization from '../Organization/typeDefs.graphql'

type RossumMembership implements Node & RossumEntity @key(fields: "id") {
  id: ID!
  url: URL!
  user: RossumUser
  organization: RossumOrganization
}

type RossumUserRole implements Node & RossumEntity @key(fields: "id") {
  id: ID!
  url: URL!
  name: String
}

type RossumUser implements Node & RossumEntity @key(fields: "id") {
  id: ID!
  url: URL!
  first_name: String
  last_name: String
  email: EmailAddress
  date_joined: DateTime
  username: String
  organization: RossumOrganization
  is_active: Boolean
  last_login: DateTime
  oidc_id: String
  queues: [RossumUserRole]
  groups: [String]
}

type Query {
  listUserRoles: [RossumUserRole]
  retrieveUserRole: RossumUserRole
  listMemberships: [RossumMembership]
  retrieveMembership: RossumMembership
  listUsers: [RossumUser]
  retrieveUser: RossumUser
}

type Mutation {
  createMembership: RossumMembership
  updateMembership: RossumMembership
  deleteMembership: RossumMembership
  createUser: RossumUser
  updateUser: RossumUser
  deleteUser: RossumUser
  changePassword(input: ChangeRossumPasswordInput!): RossumUser
  resetPassword(input: ResetRossumPasswordInput!): ResetRossumPasswordPayload
}

type ResetRossumPasswordPayload {
  detail: String
}

input ChangeRossumPasswordInput {
  new_password1: String
  new_password2: String
  old_password: String
}

input ResetRossumPasswordInput {
  email: EmailAddress
}
